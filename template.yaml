AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >

  Lambda that disables any AWS Access key not used in the past 90 days

Globals:
  Function:
    Runtime: python3.8
    Timeout: 300
    MemorySize: 256

Resources:
  DeleteUnusedKeyLambdaRole: 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: "AllowLambda"
            Effect: Allow
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Description: "Lambda Role for disabling unused access keys" 
      RoleName: "delete-unused-keys-lambda-role"
      Policies:
        - PolicyName: "delete-unused-keys-lambda-role-policy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:*'
                  - 'xray:*'
                  - 'logs:*'
                  - 'iam:*'
                Resource: "*"

  Lambdas3Bucket: 
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: "Private"
      BucketName: "delete-unused-key-lambda-bucket"
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: "Enabled"
      
  s3BucketPolicy: 
    DependsOn: Lambdas3Bucket
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: "delete-unused-key-lambda-bucket"
      PolicyDocument: 
        Statement: 
          - Sid: "AllowLambdaAccess"
            Effect: "Allow"
            Principal: 
              AWS: "arn:aws:iam::012345678912:role/delete-unused-keys-lambda-role"
            Action: 
              - "s3:*"
            Resource: "arn:aws:s3:::delete-unused-key-lambda-bucket"
          - Sid: "ForceSSLOnlyAccess" 
            Effect: "Deny"
            Principal: 
              AWS: "*"
            Action: 
              - "s3:*"
            Resource: "arn:aws:s3:::delete-unused-key-lambda-bucket"
            Condition:
              Bool: 
                aws:SecureTransport: false

  LambdaFunction: 
    Type: AWS::Serverless::Function
    Properties:
      Description: 'lambda for deleting unused keys'
      Role: arn:aws:iam::012345678912:role/delete-unused-keys-lambda-role
      FunctionName: DeleteUnusedKeysLambda
      CodeUri: src
      Handler: DeleteUnusedKeys.lambda_handler
      Tracing: Active

  EBTrigger: 
    DependsOn: LambdaFunction
    Type: AWS::Events::Rule
    Properties:
      Description: >
        EventBridge Trigger for deleting unused keys Lambda
      Name: DeleteKeysCheck1d
      ScheduleExpression: rate(1 day)
      Targets: 
        - Arn: "arn:aws:lambda:us-west-2:012345678912:function:DeleteUnusedKeysLambda"
          Id: 'DeleteUnusedKeysLambda'
      State: 'ENABLED'

  AllowEBInvoke: 
    DependsOn: EBTrigger
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 'DeleteUnusedKeysLambda'
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: "arn:aws:lambda:us-west-2:012345678912:function:DeleteUnusedKeysLambda"
